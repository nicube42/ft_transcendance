version: '3.8'

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

    volumes:
      - postgres_data:/var/lib/postgresql/data

  django:
    build:
      context: .
      dockerfile: ./django/dockerfile
    command: ./entrypoint.sh
    volumes:
      - ./django:/code
      - ./django/media_data:/code/media
    depends_on:
      - db
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      REDIRECT_AUTH_URL: ${REDIRECT_AUTH_URL}
      DJANGO_SETTINGS_MODULE : backend.settings
      PYTHONUNBUFFERED : 1
    ports:
      - "8000:8000"  # Exposing Django on port 8000

  # Assuming you have a Redis service defined for Channels
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4242:443"
    volumes:
      - ./website:/usr/share/nginx/html/website
      - media_data:/usr/share/nginx/media
    depends_on:
      - django

  ai:
    build:
      context: .
      dockerfile: ai/Dockerfile
    volumes:
      - ./ai:/app
    depends_on:
      - db
    environment:
      - SOME_ENV_VAR=example
    ports:
      - "5678:5678"

volumes:
  postgres_data:
  media_data:
